
FROM tensorflow/serving:1.14.0
ARG ARCH=arm32v7
ARG MAJOR=daffy
ARG BASE_TAG=${MAJOR}-${ARCH}

#FROM duckietown/dt-ros-commons:${BASE_TAG}
WORKDIR /code



RUN mkdir -p /data/config
# TODO this is just for the default.yamls - these should really be taken from init_sd_card
RUN git clone https://github.com/duckietown/duckiefleet.git /data/config


ARG PIP_INDEX_URL
ENV PIP_INDEX_URL=${PIP_INDEX_URL}
RUN echo PIP_INDEX_URL=${PIP_INDEX_URL}

# Before installing
RUN echo PYTHONPATH=$PYTHONPATH
RUN pip3 install -U "pip>=20.2" pipdeptree
RUN pip install -U "pip>=20.2" pipdeptree

RUN pipdeptree
RUN pip list

# FIXME ros-commons is broken
RUN apt-get update && apt-get install -y libcairo2-dev libjpeg-dev libgif-dev

RUN pip3 install pycairo==1.19.1
RUN pip check


#COPY requirements.* ./
#RUN cat requirements.* > .requirements.txt
#RUN  pip3 install --use-feature=2020-resolver -r .requirements.txt



RUN echo PYTHONPATH=$PYTHONPATH
RUN pipdeptree
RUN pip list

# For ROS Agent - Need to upgrade Pillow for Old ROS stack
RUN pip3 install pillow --user --upgrade
RUN pip install pillow --user --upgrade


RUN mkdir custom_ws

#COPY * custom_ws/src
COPY action_node custom_ws/src/action_node
COPY object_detection_dt/configuracion custom_ws/src/object_detection_dt/configuracion
COPY object_detection_dt/modelo_congelado custom_ws/src/object_detection_dt/modelo_congelado
COPY object_detection_dt/msg custom_ws/src/object_detection_dt/msg
COPY object_detection_dt/scripts custom_ws/src/object_detection_dt/scripts
COPY object_detection_dt/utils custom_ws/src/object_detection_dt/utils
COPY object_detection_dt/CMakeLists.txt custom_ws/src/object_detection_dt/CMakeLists.txt
COPY object_detection_dt/package.xml custom_ws/src/object_detection_dt/package.xml

# FIXME: what is this for? envs are not persisted
RUN /bin/bash -c "export PYTHONPATH="/usr/local/lib/python3.7/dist-packages:$PYTHONPATH""
RUN /bin/bash -c "export PYTHONPATH="/usr/local/lib/python2.7/dist-packages:$PYTHONPATH""

ENV HOSTNAME=agent
ENV VEHICLE_NAME=agent
ENV ROS_MASTER_URI=http://localhost:11311


RUN . /opt/ros/${ROS_DISTRO}/setup.sh && \
    . ${CATKIN_WS_DIR}/devel/setup.bash  && \
    catkin build --workspace /code/custom_ws


# Note: here we try to import the solution code
# so that we can check all of the libraries are imported correctly
RUN /bin/bash -c "source ${CATKIN_WS_DIR}/devel/setup.bash && python2 -c 'from solution import *'"

ENV DISABLE_CONTRACTS=1
CMD ["/bin/bash", "-c", "source custom_ws/devel/setup.bash && roslaunch action_node ads_program.launch"]